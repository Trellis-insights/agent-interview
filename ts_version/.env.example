# Example Environment Configuration
# Copy this file to .env.development, .env.staging, or .env.production
# and update the values for your specific environment

# ==========================================
# APPLICATION CONFIGURATION
# ==========================================

# Environment (development, staging, production)
NODE_ENV=development

# Server port
PORT=3000

# Log level (debug, info, warn, error)
LOG_LEVEL=debug

# ==========================================
# TEMPORAL CONFIGURATION
# ==========================================

# Temporal server address
TEMPORAL_ADDRESS=localhost:7233

# Temporal namespace
TEMPORAL_NAMESPACE=default

# Task queue name
TASK_QUEUE=agent-task-queue

# Temporal connection options
TEMPORAL_TLS_ENABLED=false
TEMPORAL_TLS_CERT_PATH=
TEMPORAL_TLS_KEY_PATH=
TEMPORAL_TLS_CA_PATH=

# ==========================================
# LLM PROVIDERS
# ==========================================

# OpenAI API Configuration
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_ORG_ID=
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MAX_TOKENS=4000
OPENAI_TEMPERATURE=0.7
OPENAI_TIMEOUT=30000

# Additional LLM providers (for future use)
ANTHROPIC_API_KEY=
COHERE_API_KEY=
HUGGINGFACE_API_KEY=

# ==========================================
# FILE UPLOAD CONFIGURATION
# ==========================================

# Trellis API for file uploads
TRELLIS_API_KEY=your-trellis-api-key-here
TRELLIS_BASE_URL=https://enterprise.prod.api.runtrellis.com

# File upload limits
MAX_FILE_SIZE=10485760  # 10MB in bytes
MAX_FILES=10
ALLOWED_FILE_TYPES=.pdf,.txt,.doc,.docx,.csv,.json

# ==========================================
# SECURITY CONFIGURATION
# ==========================================

# JWT secret for authentication (generate with: openssl rand -hex 32)
JWT_SECRET=your-secure-jwt-secret-here

# API key for internal service communication
API_KEY=your-api-key-here

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX=100           # requests per window

# ==========================================
# DATABASE CONFIGURATION
# ==========================================

# PostgreSQL connection (if using persistent storage)
DATABASE_URL=postgresql://temporal:temporal@localhost:5432/temporal
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10

# Redis connection (for caching/sessions)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# ==========================================
# MONITORING & OBSERVABILITY
# ==========================================

# Sentry for error tracking
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_RELEASE=

# New Relic APM
NEW_RELIC_LICENSE_KEY=
NEW_RELIC_APP_NAME=temporal-agent-ts

# Prometheus metrics
METRICS_ENABLED=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# ==========================================
# FEATURE FLAGS
# ==========================================

# Enable/disable features
FEATURE_FILE_UPLOAD=true
FEATURE_MULTIPLE_AGENTS=true
FEATURE_TOOL_VALIDATION=true
FEATURE_REQUEST_LOGGING=true
FEATURE_METRICS_COLLECTION=true

# ==========================================
# DEVELOPMENT SPECIFIC
# ==========================================

# Hot reload in development
HOT_RELOAD=true

# Debug options
DEBUG_TEMPORAL=false
DEBUG_LLM_REQUESTS=false
DEBUG_SQL_QUERIES=false

# Mock external services in development
MOCK_OPENAI=false
MOCK_TRELLIS=false

# ==========================================
# TESTING CONFIGURATION
# ==========================================

# Test database
TEST_DATABASE_URL=postgresql://temporal:temporal@localhost:5432/temporal_test

# Test timeouts
TEST_TIMEOUT=30000
TEST_WORKER_TIMEOUT=10000

# Coverage thresholds
COVERAGE_THRESHOLD_GLOBAL=70
COVERAGE_THRESHOLD_BRANCHES=70
COVERAGE_THRESHOLD_FUNCTIONS=70
COVERAGE_THRESHOLD_LINES=70

# ==========================================
# DOCKER/CONTAINER SPECIFIC
# ==========================================

# Container timezone
TZ=UTC

# Process management
PM2_INSTANCES=max
PM2_MAX_MEMORY_RESTART=500M

# ==========================================
# CLOUD PROVIDER SPECIFIC
# ==========================================

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=

# Azure Configuration
AZURE_STORAGE_CONNECTION_STRING=
AZURE_STORAGE_CONTAINER=

# GCP Configuration
GOOGLE_APPLICATION_CREDENTIALS=
GCP_PROJECT_ID=
GCP_STORAGE_BUCKET=

# ==========================================
# EXTERNAL SERVICES
# ==========================================

# Email service (for notifications)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@yourdomain.com

# Webhook endpoints
WEBHOOK_SUCCESS_URL=
WEBHOOK_ERROR_URL=
WEBHOOK_SECRET=

# Third-party integrations
SLACK_WEBHOOK_URL=
DISCORD_WEBHOOK_URL=

# ==========================================
# PERFORMANCE TUNING
# ==========================================

# Node.js options
NODE_OPTIONS=--max-old-space-size=512

# Event loop lag threshold
EVENT_LOOP_LAG_THRESHOLD=100

# Garbage collection
GC_INTERVAL=60000

# Connection pools
HTTP_TIMEOUT=30000
HTTP_KEEP_ALIVE=true
HTTP_MAX_SOCKETS=50

# ==========================================
# BACKUP & RECOVERY
# ==========================================

# Backup configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=

# ==========================================
# CUSTOM APPLICATION SETTINGS
# ==========================================

# Agent execution timeouts
AGENT_EXECUTION_TIMEOUT=300000  # 5 minutes
TOOL_EXECUTION_TIMEOUT=30000    # 30 seconds

# Retry policies
MAX_RETRIES=3
RETRY_DELAY=1000
EXPONENTIAL_BACKOFF=true

# Workflow settings
WORKFLOW_TASK_TIMEOUT=60000
ACTIVITY_TASK_TIMEOUT=30000
ACTIVITY_SCHEDULE_TO_CLOSE_TIMEOUT=300000